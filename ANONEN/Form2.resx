<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>